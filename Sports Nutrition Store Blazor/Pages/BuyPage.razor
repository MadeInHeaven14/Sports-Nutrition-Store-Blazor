@page "/Buy"
@using Sports_Nutrition_Store_Blazor.Data;
@using MudBlazor;
@inject NavigationManager nav;
@inject UserService service;

<body>
    <div class="Main">
        <div class="header">
            <img src="/Images/Лого-transformed-transformed.png" class="Logo1" />
            @*<input type="search" class="SearchBar" />*@
            <span class="Balance" hidden="@isHidden">
                <span class="BalanceText">
                    <label>
                        Баланс:
                    </label>
                    <label>
                        @Balance
                    </label>
                    <label>RUB</label>
                </span><br />
                <a href="/BalanceAdd" class="PlusBalance" @onclick="BalanceOrLogin">
                    <label>Пополнить баланс</label>
                </a>
            </span>
            @*<span class="UserBasket" hidden="@false">
            <label>Корзина:</label>
            <label>0</label>
            </span>*@
            <div class="Nav">
                <span class="Catalog" @onclick="MoveToCatalog">
                    <span class="CatalogLogo">
                        <img src="/Images/1564497_basket_cart_food_grosseries_shop_icon.png" class="Basket" />
                        <label>Каталог</label>
                    </span>
                </span>
                <span class="AboutCompany" @onclick="MoveToAboutCompany">
                    <span class="AboutCompanyLogo">
                        <img src="/Images/352432_info_icon.png" class="Basket" />
                        <label>О компании</label>
                    </span>
                </span>
                <span class="Login" @onclick="MoveToProfile">
                    <span class="LoginLogo">
                        <img src="/Images/1564534_customer_man_user_account_profile_icon.png" class="Basket" />
                        <label>@User</label>
                    </span>
                </span>
                <span class="UserBasket" @onclick="MoveToBasket" hidden="@isHidden">
                    <span class="UserBasketLogo">
                        <img src="/Images/3669232_basket_shopping_ic_icon.png" class="Basket" />
                        <label>Корзина: @BasketProductCount</label>
                    </span>
                </span>
            </div>
        </div><br />
        <form class="BuyForm">
            <div>
                <label for="name">Имя:</label>
                <input type="text" @bind-value="Name" id="name" name="name">
            </div>
            <div>
                <label for="phone">Номер телефона:</label>
                <input type="text" id="phone" @bind-value="phone" name="phone" onkeyup="this.value = this.value.replace(/[^0-9]/ig, '')" placeholder="+7(000)000-00-00">
                @*<MudTextField Mask="@(new PatternMask("00000000000"))" InputType="InputType.Telephone"
                              @bind-Value="phone" Variant="@Variant.Text" Placeholder="+7(000)000-00-00" Clearable />*@
            </div>
            <div>
                <label for="address">Адрес:</label>
                <input type="text" id="address" @bind-value="Adress" name="address"></input>
            </div><br />
            <div class="BuyType">
                <p>Способ оплаты:</p>
                <label for="payment1">
                    <input type="radio" id="payment1" name="payment" value="option1" @onclick="() => HandleRadioSelection(payment1)" checked>
                    Наличными
                </label>
                <label for="payment2">
                    <input type="radio" id="payment2" name="payment" value="option2" @onclick="() => HandleRadioSelection(payment2)">
                    Картой
                </label>
            </div>
            @if (RadioOption == "payment2")
            {
                <fieldset class="Card">
                    <div>
                        <label for="card-number">Номер карты:</label>
                        <input type="text" id="card-number" @bind-value="NumberCard" name="card-number" pattern="[0-9]{16}" placeholder="XXXX XXXX XXXX XXXX">
                    </div>
                    <div>
                        <label for="card-name">Имя владельца карты:</label>
                        <input type="text" @bind-value="CardOwner" id="card-name" name="card-name">
                    </div>
                    <div>
                        <label for="expiry-date">Срок действия:</label>
                        <input type="text" id="expiry-date" @bind-value="EndDate" name="expiry-date" pattern="(0[1-9]|1[0-2])\/[0-9]{2}" placeholder="ММ/ГГ">
                    </div>
                    <div>
                        <label for="cvv">CVV-код:</label>
                        <input type="text" id="cvv" @bind-value="CVC" name="cvv" pattern="[0-9]{3,4}">
                    </div>
                </fieldset>
            }
            else if (RadioOption == "payment1")
            {
                
            }<br />

            <div>
                <p>Тип доставки:</p>
                <label for="delivery1">
                    <input type="radio" id="delivery1" name="delivery" value="option1" required checked>
                    Доставка до дома
                </label>
                <label for="delivery2">
                    <input type="radio" id="delivery2" name="delivery" value="option2" required>
                    Заберу сам
                </label>
            </div><br />
            <h2>Итого: @sum руб.</h2>
        </form><br />
        @if (Name != string.Empty && phone != string.Empty && Adress != string.Empty && RadioOption == payment1)
        {
            <button class="btn_FinishBuy" @onclick="MakePurchase">Завершить покупку</button>
        }
        else
        {

        }
        @if (Name != string.Empty && phone != string.Empty && Adress != string.Empty
        && NumberCard != string.Empty && CardOwner != string.Empty && EndDate != string.Empty && CVC != string.Empty && RadioOption == payment2)
        {
            <button class="btn_FinishBuy" @onclick="MakePurchase">Завершить покупку</button>
        }
        else
        {
            
        }
        <h2 class="DangerPurchase">@NoBalance</h2>
        <footer class="Footer">
            <img src="/Images/Лого-transformed-transformed.png" class="FooterLogo" />
            <div class="SocNetwork">
                <h5>Наши соц-сети:</h5><br />
                <div class="Circles">
                    <img src="/Images/unp6h58xr4fiscbc.png" class="Insta" />
                    <img src="/Images/22842053.png" class="VK" />
                </div>
            </div>
        </footer>
    </div>
</body>

@code {
    private string User = "Войти";
    private double Balance = 0;
    private int BasketProductCount = 0;
    private bool isHidden = false;
    private float sum = 0;
    private string phoneNumber = string.Empty;
    private string RadioOption = "hideInput";
    private string payment1 = "payment1";
    private string payment2 = "payment2";
    private string NoBalance = string.Empty;
    List<Product> ProductList = new List<Product>();
    private string Name = string.Empty;
    private string phone = string.Empty;
    private string Adress = string.Empty;
    private string NumberCard = string.Empty;
    private string CardOwner = string.Empty;
    private string EndDate = string.Empty;
    private string CVC = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (service.Login != string.Empty)
        {
            User = service.Login;
            Balance = service.Balance;
            BasketProductCount = service.Basket.Count;
            if (service.Role == "Админ")
            {
                isHidden = true;
            }
            foreach (var item in service.Basket)
            {
                sum += item.Price;
            }
        }
        ProductList = MongoDB.GetAllProduct();
    }

    private void MoveToAboutCompany()
    {
        nav.NavigateTo("/");
    }

    private void MoveToCatalog()
    {
        nav.NavigateTo("/Catalog");
    }

    private void MoveToProfile()
    {
        if (User != "Войти")
        {
            if (service.Role == "Клиент")
            {
                nav.NavigateTo("/ProCli");
            }
            else
            {
                nav.NavigateTo("/ProAdm");
            }
        }
        else
        {
            nav.NavigateTo("/auth");
        }
    }

    private void BalanceOrLogin()
    {
        if (User != "Войти")
        {

        }
        else
        {
            nav.NavigateTo("/auth");
        }
    }

    private void MoveProductToBasket(Product product)
    {
        if (User != "Войти")
        {
            User user = new User();
            user = MongoDB.FindWithEmail(service.Email);
            user.Basket.Add(product);
            BasketProductCount = user.Basket.Count;
            MongoDB.ReplaceByEmail(user, service.Email);
            service.SignIn(user);
        }
        else
        {
            nav.NavigateTo("/auth");
        }
    }

    private void MoveToBasket()
    {
        if (User != "Войти")
        {
            nav.NavigateTo("/Basket");
        }
        else
        {
            nav.NavigateTo("/auth");
        }
    }

    private void HandleRadioSelection(string option)
    {
        RadioOption = option;
    }

    private void MakePurchase()
    {
        if (service.Balance >= sum)
        {
            User user = new User();
            user = MongoDB.FindWithEmail(service.Email);
            foreach (var item in service.Basket)
            {
                user.Purchases.Add(item);
            }
            user.Basket.Clear();
            user.Balance -= sum;
            Balance = user.Balance;
            BasketProductCount = user.Basket.Count;
            MongoDB.ReplaceByEmail(user, service.Email);
            service.SignIn(user);
            nav.NavigateTo("/Gratitude");
        }
        else
        {
            NoBalance = "У вас недостаточно средств на балансе для выполнения этой операции. Пожалуйста, пополните баланс.";
        }
    }
}

